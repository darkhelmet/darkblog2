= stylesheet_link_tag('dark-hive/jquery-ui-1.8.4.custom.css')
= stylesheet_link_tag('admin_images.css')
= javascript_include_tag('http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.4/jquery-ui.min.js')
:javascript
  $(document).ready(function() {
    $('#post_category').autocomplete({
      source: #{Post.categories.to_json}
    });

    (function(tags) {
      var split = function(val) {
        return val.split(/,\s*/);
      };

      var extractLast = function(term) {
        return split(term).pop();
      };

      $('#post_tag_string').autocomplete({
        minLength: 0,
        source: function(request, response) {
          // delegate back to autocomplete, but extract the last term
          response($.ui.autocomplete.filter(tags, extractLast(request.term)));
        },
        focus: function() {
          // prevent value inserted on focus
          return false;
        },
        select: function(event, ui) {
          var terms = split(this.value);
          // remove the current input
          terms.pop();
          // add the selected item
          terms.push(ui.item.value);
          // add placeholder to get the comma-and-space at the end
          terms.push('');
          this.value = terms.join(', ');
          return false;
        }
      });
    })(#{Post.tags.to_json});
  });

= semantic_form_for([:admin, @post]) do |f|
  = f.inputs 'Basics' do
    = f.input(:title)
    = f.input(:description)
    = f.input(:category)
    = f.input(:tag_string)

  = f.inputs 'Content' do
    = f.input(:renderer, as: :select, collection: %w(textile markdown))
    = f.input(:body)

  = f.inputs 'Images', id: :images do
    - images = PostDecorator.decorate(@post).image_hash
    - images.keys.each do |key|
      = image_tag(image_path(images[key]['small']))

  = f.inputs 'Publishing' do
    = f.input(:published_on, :label => 'Publish Date')
    = f.input(:published)

  = f.buttons

- unless @post.new_record?
  = form_tag('http://api2.transloadit.com/assemblies', multipart: true, id: :uploader) do
    = hidden_field_tag(:params, { auth: { key: ENV['TRANSLOADIT_AUTH_KEY'] }, template_id: '4728d6347d1d4025aaa914e87d764b7e', redirect_url: upload_admin_post_url(@post) }.to_json)
    = tag(:input, type: :file, name: :image, multiple: :multiple)
    = tag(:br)
    = tag(:br)
    = submit_tag('Upload')

= javascript_include_tag('//assets.transloadit.com/js/jquery.transloadit2.js')
:javascript
  $(document).ready(function() {
    $('#uploader').transloadit({ wait: true });
  });

:css
  #post_body {
    font-size: 18px;
  }
